"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/decompress-response";
exports.ids = ["vendor-chunks/decompress-response"];
exports.modules = {

/***/ "(ssr)/./node_modules/decompress-response/index.js":
/*!***************************************************!*\
  !*** ./node_modules/decompress-response/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { Transform, PassThrough } = __webpack_require__(/*! stream */ \"stream\");\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\nconst mimicResponse = __webpack_require__(/*! mimic-response */ \"(ssr)/./node_modules/mimic-response/index.js\");\nmodule.exports = (response)=>{\n    const contentEncoding = (response.headers[\"content-encoding\"] || \"\").toLowerCase();\n    delete response.headers[\"content-encoding\"];\n    if (![\n        \"gzip\",\n        \"deflate\",\n        \"br\"\n    ].includes(contentEncoding)) {\n        return response;\n    }\n    // TODO: Remove this when targeting Node.js 12.\n    const isBrotli = contentEncoding === \"br\";\n    if (isBrotli && typeof zlib.createBrotliDecompress !== \"function\") {\n        response.destroy(new Error(\"Brotli is not supported on Node.js < 12\"));\n        return response;\n    }\n    let isEmpty = true;\n    const checker = new Transform({\n        transform (data, _encoding, callback) {\n            isEmpty = false;\n            callback(null, data);\n        },\n        flush (callback) {\n            callback();\n        }\n    });\n    const finalStream = new PassThrough({\n        autoDestroy: false,\n        destroy (error, callback) {\n            response.destroy();\n            callback(error);\n        }\n    });\n    const decompressStream = isBrotli ? zlib.createBrotliDecompress() : zlib.createUnzip();\n    decompressStream.once(\"error\", (error)=>{\n        if (isEmpty && !response.readable) {\n            finalStream.end();\n            return;\n        }\n        finalStream.destroy(error);\n    });\n    mimicResponse(response, finalStream);\n    response.pipe(checker).pipe(decompressStream).pipe(finalStream);\n    return finalStream;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZGVjb21wcmVzcy1yZXNwb25zZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU0sRUFBQ0EsU0FBUyxFQUFFQyxXQUFXLEVBQUMsR0FBR0MsbUJBQU9BLENBQUM7QUFDekMsTUFBTUMsT0FBT0QsbUJBQU9BLENBQUM7QUFDckIsTUFBTUUsZ0JBQWdCRixtQkFBT0EsQ0FBQztBQUU5QkcsT0FBT0MsT0FBTyxHQUFHQyxDQUFBQTtJQUNoQixNQUFNQyxrQkFBa0IsQ0FBQ0QsU0FBU0UsT0FBTyxDQUFDLG1CQUFtQixJQUFJLEVBQUMsRUFBR0MsV0FBVztJQUNoRixPQUFPSCxTQUFTRSxPQUFPLENBQUMsbUJBQW1CO0lBRTNDLElBQUksQ0FBQztRQUFDO1FBQVE7UUFBVztLQUFLLENBQUNFLFFBQVEsQ0FBQ0gsa0JBQWtCO1FBQ3pELE9BQU9EO0lBQ1I7SUFFQSwrQ0FBK0M7SUFDL0MsTUFBTUssV0FBV0osb0JBQW9CO0lBQ3JDLElBQUlJLFlBQVksT0FBT1QsS0FBS1Usc0JBQXNCLEtBQUssWUFBWTtRQUNsRU4sU0FBU08sT0FBTyxDQUFDLElBQUlDLE1BQU07UUFDM0IsT0FBT1I7SUFDUjtJQUVBLElBQUlTLFVBQVU7SUFFZCxNQUFNQyxVQUFVLElBQUlqQixVQUFVO1FBQzdCa0IsV0FBVUMsSUFBSSxFQUFFQyxTQUFTLEVBQUVDLFFBQVE7WUFDbENMLFVBQVU7WUFFVkssU0FBUyxNQUFNRjtRQUNoQjtRQUVBRyxPQUFNRCxRQUFRO1lBQ2JBO1FBQ0Q7SUFDRDtJQUVBLE1BQU1FLGNBQWMsSUFBSXRCLFlBQVk7UUFDbkN1QixhQUFhO1FBQ2JWLFNBQVFXLEtBQUssRUFBRUosUUFBUTtZQUN0QmQsU0FBU08sT0FBTztZQUVoQk8sU0FBU0k7UUFDVjtJQUNEO0lBRUEsTUFBTUMsbUJBQW1CZCxXQUFXVCxLQUFLVSxzQkFBc0IsS0FBS1YsS0FBS3dCLFdBQVc7SUFFcEZELGlCQUFpQkUsSUFBSSxDQUFDLFNBQVNILENBQUFBO1FBQzlCLElBQUlULFdBQVcsQ0FBQ1QsU0FBU3NCLFFBQVEsRUFBRTtZQUNsQ04sWUFBWU8sR0FBRztZQUNmO1FBQ0Q7UUFFQVAsWUFBWVQsT0FBTyxDQUFDVztJQUNyQjtJQUVBckIsY0FBY0csVUFBVWdCO0lBQ3hCaEIsU0FBU3dCLElBQUksQ0FBQ2QsU0FBU2MsSUFBSSxDQUFDTCxrQkFBa0JLLElBQUksQ0FBQ1I7SUFFbkQsT0FBT0E7QUFDUiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1jb21tZXJjZS15dC1ieS1taWtlLy4vbm9kZV9tb2R1bGVzL2RlY29tcHJlc3MtcmVzcG9uc2UvaW5kZXguanM/MjQ4NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCB7VHJhbnNmb3JtLCBQYXNzVGhyb3VnaH0gPSByZXF1aXJlKCdzdHJlYW0nKTtcbmNvbnN0IHpsaWIgPSByZXF1aXJlKCd6bGliJyk7XG5jb25zdCBtaW1pY1Jlc3BvbnNlID0gcmVxdWlyZSgnbWltaWMtcmVzcG9uc2UnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXNwb25zZSA9PiB7XG5cdGNvbnN0IGNvbnRlbnRFbmNvZGluZyA9IChyZXNwb25zZS5oZWFkZXJzWydjb250ZW50LWVuY29kaW5nJ10gfHwgJycpLnRvTG93ZXJDYXNlKCk7XG5cdGRlbGV0ZSByZXNwb25zZS5oZWFkZXJzWydjb250ZW50LWVuY29kaW5nJ107XG5cblx0aWYgKCFbJ2d6aXAnLCAnZGVmbGF0ZScsICdiciddLmluY2x1ZGVzKGNvbnRlbnRFbmNvZGluZykpIHtcblx0XHRyZXR1cm4gcmVzcG9uc2U7XG5cdH1cblxuXHQvLyBUT0RPOiBSZW1vdmUgdGhpcyB3aGVuIHRhcmdldGluZyBOb2RlLmpzIDEyLlxuXHRjb25zdCBpc0Jyb3RsaSA9IGNvbnRlbnRFbmNvZGluZyA9PT0gJ2JyJztcblx0aWYgKGlzQnJvdGxpICYmIHR5cGVvZiB6bGliLmNyZWF0ZUJyb3RsaURlY29tcHJlc3MgIT09ICdmdW5jdGlvbicpIHtcblx0XHRyZXNwb25zZS5kZXN0cm95KG5ldyBFcnJvcignQnJvdGxpIGlzIG5vdCBzdXBwb3J0ZWQgb24gTm9kZS5qcyA8IDEyJykpO1xuXHRcdHJldHVybiByZXNwb25zZTtcblx0fVxuXG5cdGxldCBpc0VtcHR5ID0gdHJ1ZTtcblxuXHRjb25zdCBjaGVja2VyID0gbmV3IFRyYW5zZm9ybSh7XG5cdFx0dHJhbnNmb3JtKGRhdGEsIF9lbmNvZGluZywgY2FsbGJhY2spIHtcblx0XHRcdGlzRW1wdHkgPSBmYWxzZTtcblxuXHRcdFx0Y2FsbGJhY2sobnVsbCwgZGF0YSk7XG5cdFx0fSxcblxuXHRcdGZsdXNoKGNhbGxiYWNrKSB7XG5cdFx0XHRjYWxsYmFjaygpO1xuXHRcdH1cblx0fSk7XG5cblx0Y29uc3QgZmluYWxTdHJlYW0gPSBuZXcgUGFzc1Rocm91Z2goe1xuXHRcdGF1dG9EZXN0cm95OiBmYWxzZSxcblx0XHRkZXN0cm95KGVycm9yLCBjYWxsYmFjaykge1xuXHRcdFx0cmVzcG9uc2UuZGVzdHJveSgpO1xuXG5cdFx0XHRjYWxsYmFjayhlcnJvcik7XG5cdFx0fVxuXHR9KTtcblxuXHRjb25zdCBkZWNvbXByZXNzU3RyZWFtID0gaXNCcm90bGkgPyB6bGliLmNyZWF0ZUJyb3RsaURlY29tcHJlc3MoKSA6IHpsaWIuY3JlYXRlVW56aXAoKTtcblxuXHRkZWNvbXByZXNzU3RyZWFtLm9uY2UoJ2Vycm9yJywgZXJyb3IgPT4ge1xuXHRcdGlmIChpc0VtcHR5ICYmICFyZXNwb25zZS5yZWFkYWJsZSkge1xuXHRcdFx0ZmluYWxTdHJlYW0uZW5kKCk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0ZmluYWxTdHJlYW0uZGVzdHJveShlcnJvcik7XG5cdH0pO1xuXG5cdG1pbWljUmVzcG9uc2UocmVzcG9uc2UsIGZpbmFsU3RyZWFtKTtcblx0cmVzcG9uc2UucGlwZShjaGVja2VyKS5waXBlKGRlY29tcHJlc3NTdHJlYW0pLnBpcGUoZmluYWxTdHJlYW0pO1xuXG5cdHJldHVybiBmaW5hbFN0cmVhbTtcbn07XG4iXSwibmFtZXMiOlsiVHJhbnNmb3JtIiwiUGFzc1Rocm91Z2giLCJyZXF1aXJlIiwiemxpYiIsIm1pbWljUmVzcG9uc2UiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVzcG9uc2UiLCJjb250ZW50RW5jb2RpbmciLCJoZWFkZXJzIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsImlzQnJvdGxpIiwiY3JlYXRlQnJvdGxpRGVjb21wcmVzcyIsImRlc3Ryb3kiLCJFcnJvciIsImlzRW1wdHkiLCJjaGVja2VyIiwidHJhbnNmb3JtIiwiZGF0YSIsIl9lbmNvZGluZyIsImNhbGxiYWNrIiwiZmx1c2giLCJmaW5hbFN0cmVhbSIsImF1dG9EZXN0cm95IiwiZXJyb3IiLCJkZWNvbXByZXNzU3RyZWFtIiwiY3JlYXRlVW56aXAiLCJvbmNlIiwicmVhZGFibGUiLCJlbmQiLCJwaXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/decompress-response/index.js\n");

/***/ })

};
;